/**
 * Email Template Editor Module
 * Handles the visual email template editing functionality
 */

// Add email template editor functionality to namespace
GreenMetricsAdmin.EmailTemplateEditor = (function ($) {
    'use strict';

    // Template definitions
    var predefinedTemplates = {
        'default': {
            name: 'Default',
            description: 'Clean, professional design with green accents',
            colors: {
                primary: '#4CAF50',
                secondary: '#f9f9f9',
                accent: '#333333',
                text: '#333333',
                background: '#ffffff'
            },
            header: '<div class="header">\n\t<h1>GreenMetrics Report</h1>\n\t<p>[site_name] | [date]</p>\n</div>',
            footer: '<div class="footer">\n\t<p>This report was generated by the GreenMetrics WordPress plugin.</p>\n\t<p>You can change your email preferences in the GreenMetrics Email Reporting settings.</p>\n</div>',
            css: ''
        },
        'minimal': {
            name: 'Minimal',
            description: 'Simple, clean design with minimal styling',
            colors: {
                primary: '#2196F3',
                secondary: '#f5f5f5',
                accent: '#555555',
                text: '#333333',
                background: '#ffffff'
            },
            header: '<div class="header minimal-header">\n\t<h1>GreenMetrics Report</h1>\n\t<p>[site_name] | [date]</p>\n</div>',
            footer: '<div class="footer minimal-footer">\n\t<p>Generated by GreenMetrics | [date]</p>\n</div>',
            css: '.minimal-header {\n\tborder-bottom: 1px solid #eee;\n\tpadding-bottom: 15px;\n}\n.minimal-footer {\n\tborder-top: 1px solid #eee;\n\tpadding-top: 15px;\n\ttext-align: center;\n\tfont-size: 12px;\n}'
        },
        'modern': {
            name: 'Modern',
            description: 'Bold, modern design with strong colors',
            colors: {
                primary: '#673AB7',
                secondary: '#f0f0f0',
                accent: '#FF5722',
                text: '#212121',
                background: '#ffffff'
            },
            header: '<div class="header modern-header">\n\t<div class="logo-area">\n\t\t<h1>GreenMetrics</h1>\n\t</div>\n\t<h2>Performance Report</h2>\n\t<p>[site_name] | [date]</p>\n</div>',
            footer: '<div class="footer modern-footer">\n\t<p>This report was generated by GreenMetrics</p>\n\t<p><a href="[site_url]">Visit your website</a> | <a href="[admin_url]">Manage settings</a></p>\n</div>',
            css: '.modern-header {\n\ttext-align: left;\n\tpadding: 20px 0;\n}\n.modern-header h1 {\n\tcolor: #673AB7;\n\tfont-size: 28px;\n\tmargin-bottom: 5px;\n}\n.modern-header h2 {\n\tcolor: #FF5722;\n\tfont-size: 20px;\n\tmargin-top: 0;\n}\n.modern-footer {\n\tbackground-color: #f0f0f0;\n\tpadding: 15px;\n\ttext-align: center;\n\tborder-radius: 0 0 5px 5px;\n}'
        },
        'eco': {
            name: 'Eco-Friendly',
            description: 'Nature-inspired design with earthy colors',
            colors: {
                primary: '#8BC34A',
                secondary: '#F1F8E9',
                accent: '#689F38',
                text: '#33691E',
                background: '#FAFAFA'
            },
            header: '<div class="header eco-header">\n\t<div class="eco-logo">ðŸŒ¿</div>\n\t<h1>GreenMetrics Eco Report</h1>\n\t<p>[site_name] | [date]</p>\n\t<div class="eco-tagline">Monitoring your website\'s environmental impact</div>\n</div>',
            footer: '<div class="footer eco-footer">\n\t<p>Thank you for contributing to a greener web!</p>\n\t<p>Generated by GreenMetrics for [site_name]</p>\n</div>',
            css: '.eco-header {\n\tbackground-color: #F1F8E9;\n\tpadding: 20px;\n\tborder-radius: 5px 5px 0 0;\n\ttext-align: center;\n}\n.eco-logo {\n\tfont-size: 36px;\n\tmargin-bottom: 10px;\n}\n.eco-tagline {\n\tfont-style: italic;\n\tcolor: #689F38;\n\tmargin-top: 10px;\n}\n.eco-footer {\n\tbackground-color: #F1F8E9;\n\tpadding: 15px;\n\tborder-radius: 0 0 5px 5px;\n\ttext-align: center;\n\tcolor: #33691E;\n}'
        }
    };

    // Placeholder definitions
    var availablePlaceholders = [
        { code: '[site_name]', description: 'Your website name' },
        { code: '[site_url]', description: 'Your website URL' },
        { code: '[admin_url]', description: 'WordPress admin URL' },
        { code: '[date]', description: 'Current date' },
        { code: '[time]', description: 'Current time' },
        { code: '[year]', description: 'Current year' },
        { code: '[month]', description: 'Current month' },
        { code: '[day]', description: 'Current day' },
        { code: '[carbon_total]', description: 'Total carbon footprint' },
        { code: '[energy_total]', description: 'Total energy consumption' },
        { code: '[data_total]', description: 'Total data transfer' },
        { code: '[views_total]', description: 'Total page views' }
    ];

    // Current template state
    var currentTemplate = 'default';
    var currentColors = { ...predefinedTemplates.default.colors };
    var isInitialized = false;

    /**
     * Initialize the email template editor
     *
     * @function init
     * @memberof GreenMetricsAdmin.EmailTemplateEditor
     * @public
     */
    function init() {
        // Only initialize once
        if (isInitialized) {
            return;
        }

        // Check if we're on the email reporting page
        if ($('#email-template-editor').length === 0) {
            return;
        }

        // Get the selected template style
        var $selector = $('#email_template_selector');
        var selectedTemplate = $selector.val();

        // Set the current template based on the selected option
        if (selectedTemplate && predefinedTemplates[selectedTemplate]) {
            currentTemplate = selectedTemplate;
        }

        // Get saved values for colors
        $('.color-picker').each(function() {
            var $this = $(this);
            var id = $this.attr('id');
            var colorKey = id.replace('email_color_', '');
            var savedColor = $this.val();

            if (savedColor) {
                currentColors[colorKey] = savedColor;
            }
        });

        // Initialize the template editor components
        setupColorPickers();
        setupPlaceholderButtons();
        setupEventListeners();
        setupCodeEditorEffects();

        // Load the template - this will respect existing values
        loadTemplate(currentTemplate);

        // Ensure form values are preserved on submission
        ensureFormValuesPreserved();

        isInitialized = true;
    }

    /**
     * Set up the template selector
     *
     * @function setupTemplateSelector
     * @memberof GreenMetricsAdmin.EmailTemplateEditor
     * @private
     */
    function setupTemplateSelector() {
        var $selector = $('#email_template_selector');

        // Clear existing options first
        $selector.empty();

        // Add options to the selector
        $.each(predefinedTemplates, function(id, template) {
            $selector.append($('<option>', {
                value: id,
                text: template.name,
                selected: (id === currentTemplate)
            }));
        });

        // Update template description
        updateTemplateDescription();
    }

    /**
     * Update the template description
     *
     * @function updateTemplateDescription
     * @memberof GreenMetricsAdmin.EmailTemplateEditor
     * @private
     */
    function updateTemplateDescription() {
        var template = predefinedTemplates[currentTemplate];
        $('#template-description').text(template.description);
    }

    /**
     * Set up color pickers
     *
     * @function setupColorPickers
     * @memberof GreenMetricsAdmin.EmailTemplateEditor
     * @private
     */
    function setupColorPickers() {
        // Initialize color pickers if wp-color-picker is available
        if ($.fn.wpColorPicker) {
            $('.color-picker').each(function() {
                var $this = $(this);
                var id = $this.attr('id');
                var colorKey = id.replace('email_color_', '');
                var savedColor = $this.val();

                // Initialize with the saved color or default
                $this.wpColorPicker({
                    color: savedColor || currentColors[colorKey],
                    change: function(event, ui) {
                        var color = ui.color.toString();

                        // Update current colors
                        currentColors[colorKey] = color;

                        // Update preview
                        updateEmailPreview();
                    }
                });

                // Force the color picker to show the correct color
                setTimeout(function() {
                    if (savedColor) {
                        $this.wpColorPicker('color', savedColor);

                        // Also update the hidden input value
                        $this.val(savedColor);
                    }
                }, 200);
            });
        }
    }

    /**
     * Set up placeholder buttons
     *
     * @function setupPlaceholderButtons
     * @memberof GreenMetricsAdmin.EmailTemplateEditor
     * @private
     */
    function setupPlaceholderButtons() {
        var $container = $('#placeholder-buttons');

        // Add buttons for each placeholder
        $.each(availablePlaceholders, function(index, placeholder) {
            var $button = $('<button>', {
                type: 'button',
                class: 'button placeholder-button',
                'data-placeholder': placeholder.code,
                text: placeholder.code,
                title: 'Click to copy: ' + placeholder.description
            });

            var $wrapper = $('<div>', {
                class: 'placeholder-button-wrapper'
            }).append($button);

            $container.append($wrapper);
        });
    }

    /**
     * Set up event listeners
     *
     * @function setupEventListeners
     * @memberof GreenMetricsAdmin.EmailTemplateEditor
     * @private
     */
    function setupEventListeners() {
        // Template selector change
        $('#email_template_selector').on('change', function() {
            currentTemplate = $(this).val();
            loadTemplate(currentTemplate);
            updateTemplateDescription();

            // Update preview immediately when template changes
            updateEmailPreview();

            // Ensure form submission preserves all values
            ensureFormValuesPreserved();
        });

        // Placeholder button click - copy to clipboard
        $(document).on('click', '.placeholder-button', function() {
            var placeholder = $(this).data('placeholder');
            copyToClipboard(placeholder);

            // Show copied message
            var $button = $(this);
            var originalText = $button.text();
            $button.text('Copied!');
            $button.addClass('copied');

            setTimeout(function() {
                $button.text(originalText);
                $button.removeClass('copied');
            }, 1500);
        });

        // Preview toggle
        $('#toggle-mobile-preview').on('click', function() {
            toggleMobilePreview();
        });

        // Template content changes - update preview
        $('#email_reporting_header, #email_reporting_footer, #email_reporting_css').on('input change', function() {
            // Debounce the preview update to avoid too many requests
            clearTimeout(window.templatePreviewTimeout);
            window.templatePreviewTimeout = setTimeout(function() {
                updateEmailPreview();
            }, 500);
        });

        // Form submission - ensure all values are preserved
        $('#email-template-editor form').on('submit', function() {
            // IMPORTANT: Update hidden color inputs with the current color picker values
            // This is necessary because WordPress color picker doesn't update the original input
            $('.color-picker').each(function() {
                var $this = $(this);
                var $wpColorPickerInput = $this.closest('.wp-picker-container').find('.wp-color-picker');

                if ($wpColorPickerInput.length) {
                    // Get the color from the color picker input
                    var pickerColor = $wpColorPickerInput.val();

                    // Update the original input with the color picker value
                    $this.val(pickerColor);
                }
            });

            ensureFormValuesPreserved();
        });
    }

    /**
     * Copy text to clipboard
     *
     * @function copyToClipboard
     * @memberof GreenMetricsAdmin.EmailTemplateEditor
     * @private
     * @param {string} text - Text to copy
     */
    function copyToClipboard(text) {
        // Create a temporary textarea
        var $temp = $('<textarea>');
        $('body').append($temp);
        $temp.val(text).select();

        // Execute copy command
        document.execCommand('copy');

        // Remove temporary element
        $temp.remove();
    }

    /**
     * Load a template
     *
     * @function loadTemplate
     * @memberof GreenMetricsAdmin.EmailTemplateEditor
     * @private
     * @param {string} templateId - The template ID to load
     */
    function loadTemplate(templateId) {
        var template = predefinedTemplates[templateId];

        // Check if this is the initial page load
        var isInitialLoad = !isInitialized;

        // Get existing values from the form fields
        var existingHeader = $('#email_reporting_header').val();
        var existingFooter = $('#email_reporting_footer').val();
        var existingCSS = $('#email_reporting_css').val();

        // Only use template values if the fields are empty or this is a template change (not initial load)
        if (!isInitialLoad || !existingHeader) {
            $('#email_reporting_header').val(template.header);
        }

        if (!isInitialLoad || !existingFooter) {
            $('#email_reporting_footer').val(template.footer);
        }

        if (!isInitialLoad || !existingCSS) {
            $('#email_reporting_css').val(template.css);
        }

        // Update color pickers - only use template colors if this is not the initial load
        // or if the color picker doesn't already have a value
        $.each(template.colors, function(key, color) {
            var $colorPicker = $('#email_color_' + key);
            var currentColor = $colorPicker.val();

            // Only set the color if it's not already set or this is a template change
            if (!isInitialLoad || !currentColor) {
                $colorPicker.wpColorPicker('color', color);

                // Also update the hidden input value
                $colorPicker.val(color);

                currentColors[key] = color;
            } else {
                // Use the existing color
                currentColors[key] = currentColor;
            }
        });

        // Update preview
        updateEmailPreview();
    }

    /**
     * Insert a placeholder at the cursor position
     *
     * @function insertPlaceholder
     * @memberof GreenMetricsAdmin.EmailTemplateEditor
     * @private
     * @param {string} placeholder - The placeholder to insert
     */
    function insertPlaceholder(placeholder) {
        // Get the active element
        var activeElement = document.activeElement;

        // Force insert into the header textarea if nothing is focused
        if (activeElement.tagName.toLowerCase() !== 'textarea') {
            activeElement = document.getElementById('email_reporting_header');

            // Set cursor at the end
            var length = activeElement.value.length;
            activeElement.focus();
            activeElement.selectionStart = length;
            activeElement.selectionEnd = length;

            // Show a brief notification
            var $notification = $('<div class="notice notice-info inline" style="margin: 5px 0; padding: 5px 10px; display: inline-block;">' +
                                '<p style="margin: 0;">Placeholder inserted at the end of the header.</p>' +
                                '</div>');

            $('#placeholder-buttons').after($notification);

            setTimeout(function() {
                $notification.fadeOut(300, function() {
                    $(this).remove();
                });
            }, 2000);
        }

        // Get the current selection
        var start = activeElement.selectionStart;
        var end = activeElement.selectionEnd;

        // Insert the placeholder
        activeElement.value = activeElement.value.substring(0, start) +
                             placeholder +
                             activeElement.value.substring(end);

        // Set the cursor position after the inserted placeholder
        activeElement.selectionStart = activeElement.selectionEnd = start + placeholder.length;

        // Focus the element
        activeElement.focus();

        // Trigger change event to update preview
        $(activeElement).trigger('change');

        // Show a brief highlight effect on the inserted text
        var $activeElement = $(activeElement);
        var originalBg = $activeElement.css('background-color');

        $activeElement.css('background-color', '#e6f7e6');
        setTimeout(function() {
            $activeElement.css('background-color', originalBg);
        }, 300);
    }

    /**
     * Toggle mobile preview
     *
     * @function toggleMobilePreview
     * @memberof GreenMetricsAdmin.EmailTemplateEditor
     * @private
     */
    function toggleMobilePreview() {
        var $frame = $('#email-preview-frame');
        var $button = $('#toggle-mobile-preview');

        // Empty the button and recreate its contents
        $button.empty();

        if ($frame.hasClass('mobile-preview')) {
            // Switch to desktop view
            $frame.removeClass('mobile-preview');
            $button.html('<span class="dashicons dashicons-smartphone" style="margin-right: 5px; font-size: 18px; vertical-align: text-bottom;"></span> Mobile Preview');
        } else {
            // Switch to mobile view
            $frame.addClass('mobile-preview');
            $button.html('<span class="dashicons dashicons-desktop" style="margin-right: 5px; font-size: 18px; vertical-align: text-bottom;"></span> Desktop Preview');
        }
    }

    /**
     * Set up code editor effects for textareas
     *
     * @function setupCodeEditorEffects
     * @memberof GreenMetricsAdmin.EmailTemplateEditor
     * @private
     */
    function setupCodeEditorEffects() {
        // Add syntax highlighting classes based on content
        $('.email-template-textarea').each(function() {
            var $textarea = $(this);

            // Add syntax highlighting classes based on content
            if ($textarea.attr('id') === 'email_reporting_css') {
                $textarea.addClass('language-css');
            } else {
                $textarea.addClass('language-html');
            }
        });
    }

    /**
     * Update line numbers for a textarea
     *
     * @function updateLineNumbers
     * @memberof GreenMetricsAdmin.EmailTemplateEditor
     * @private
     * @param {jQuery} $textarea - The textarea to update line numbers for
     */
    function updateLineNumbers($textarea) {
        var content = $textarea.val();
        var lines = content.split('\n');
        var lineCount = lines.length;

        // Generate line numbers
        var lineNumbers = '';
        for (var i = 1; i <= lineCount; i++) {
            // Right-align numbers with padding
            if (i < 10) {
                lineNumbers += ' ' + i + ' \n';
            } else if (i < 100) {
                lineNumbers += i + ' \n';
            } else {
                lineNumbers += i + '\n';
            }
        }

        // Add at least 10 lines
        while (lineCount < 10) {
            if (lineCount + 1 < 10) {
                lineNumbers += ' ' + (lineCount + 1) + ' \n';
            } else {
                lineNumbers += (lineCount + 1) + ' \n';
            }
            lineCount++;
        }

        // Set line numbers as data attribute
        $textarea.attr('data-line-numbers', lineNumbers);
    }

    /**
     * Update email preview with current settings
     *
     * @function updateEmailPreview
     * @memberof GreenMetricsAdmin.EmailTemplateEditor
     * @private
     */
    function updateEmailPreview() {
        // This function will be called by the main email-reporting.js
        // We'll extend it in our implementation
        if (typeof GreenMetricsAdmin.EmailReporting !== 'undefined' &&
            typeof GreenMetricsAdmin.EmailReporting.updateEmailPreview === 'function') {
            GreenMetricsAdmin.EmailReporting.updateEmailPreview();
        }
    }

    /**
     * Ensure all form values are preserved when submitting the template form
     *
     * @function ensureFormValuesPreserved
     * @memberof GreenMetricsAdmin.EmailTemplateEditor
     * @private
     */
    function ensureFormValuesPreserved() {
        // Get the form in the email-template-editor section
        var $templateForm = $('#email-template-editor form');

        // Get the first form with the email settings
        var $settingsForm = $('.email-settings-form');

        if ($templateForm.length && $settingsForm.length) {
            // Find all input, select, and textarea elements in the settings form
            $settingsForm.find('input, select, textarea').each(function() {
                var $this = $(this);
                var name = $this.attr('name');

                // Skip if no name attribute or if it's a submit button
                if (!name || $this.attr('type') === 'submit') {
                    return;
                }

                // Check if this field already exists in the template form
                var fieldExists = $templateForm.find('[name="' + name + '"]').length > 0;

                // If it doesn't exist, add it as a hidden field
                if (!fieldExists) {
                    var value = '';

                    // Get the value based on the input type
                    if ($this.is(':checkbox') || $this.is(':radio')) {
                        value = $this.is(':checked') ? $this.val() : '';
                    } else {
                        value = $this.val();
                    }

                    // Only add if the value is not empty
                    if (value !== '') {
                        $templateForm.append('<input type="hidden" name="' + name + '" value="' + value + '">');
                    }
                }
            });
        }
    }

    // Public API
    return {
        init: init,
        predefinedTemplates: predefinedTemplates,
        availablePlaceholders: availablePlaceholders
    };
})(jQuery);

// Initialize on document ready
jQuery(document).ready(function() {
    GreenMetricsAdmin.EmailTemplateEditor.init();
});
